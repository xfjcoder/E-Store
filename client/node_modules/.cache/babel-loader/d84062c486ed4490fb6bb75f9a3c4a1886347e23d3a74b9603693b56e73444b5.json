{"ast":null,"code":"// client/src/actions/authActions.js\nimport axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../constants/authConstants\";\n\n// Login user\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Register user\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/register`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Logout user\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\n// Load user details\nexport const loadUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      auth: {\n        userInfo\n      }\n    } = getState();\n    if (!userInfo) {\n      dispatch({\n        type: USER_DETAILS_FAIL,\n        payload: \"User not authenticated\"\n      });\n      return;\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_API_URL}/auth/profile`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","login","email","password","dispatch","type","config","headers","data","post","process","env","REACT_APP_API_URL","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","logout","removeItem","loadUser","getState","auth","userInfo","Authorization","token","get"],"sources":["C:/Users/End User/Documents/CSTU/CSE552 Full Stack Development/E-Commerce Project/estore-app/client/src/actions/authActions.js"],"sourcesContent":["// client/src/actions/authActions.js\r\nimport axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n} from \"../constants/authConstants\";\r\n\r\n// Login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/login`,\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Register user\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/register`,\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\n// Load user details\r\nexport const loadUser = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      auth: { userInfo },\r\n    } = getState();\r\n\r\n    if (!userInfo) {\r\n      dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n        payload: \"User not authenticated\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/auth/profile`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}