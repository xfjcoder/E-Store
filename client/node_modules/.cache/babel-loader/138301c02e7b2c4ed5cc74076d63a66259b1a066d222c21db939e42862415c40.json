{"ast":null,"code":"// client/src/actions/cartActions.js\nimport axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_ITEM, CART_FETCH_REQUEST, CART_FETCH_SUCCESS, CART_FETCH_FAIL, CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\n\n// Add to cart\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_API_URL}/products/${id}`);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.imageUrl,\n        price: data.price,\n        stock: data.stock,\n        quantity\n      }\n    });\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  } catch (error) {\n    console.error(\"Error adding to cart:\", error);\n  }\n};\n\n// Remove from cart\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// Update cart item quantity\nexport const updateCartItem = (id, quantity) => (dispatch, getState) => {\n  dispatch({\n    type: CART_UPDATE_ITEM,\n    payload: {\n      id,\n      quantity\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// Fetch user cart from server\nexport const fetchCart = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CART_FETCH_REQUEST\n    });\n    const {\n      auth: {\n        userInfo\n      }\n    } = getState();\n    if (!userInfo) {\n      dispatch({\n        type: CART_FETCH_FAIL,\n        payload: \"User not authenticated\"\n      });\n      return;\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${process.env.REACT_APP_API_URL}/cart`, config);\n    dispatch({\n      type: CART_FETCH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CART_FETCH_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Clear cart\nexport const clearCart = () => dispatch => {\n  dispatch({\n    type: CART_CLEAR_ITEMS\n  });\n  localStorage.removeItem(\"cartItems\");\n};","map":{"version":3,"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_UPDATE_ITEM","CART_FETCH_REQUEST","CART_FETCH_SUCCESS","CART_FETCH_FAIL","CART_CLEAR_ITEMS","addToCart","id","quantity","dispatch","getState","data","get","process","env","REACT_APP_API_URL","type","payload","product","_id","name","image","imageUrl","price","stock","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","removeFromCart","updateCartItem","fetchCart","auth","userInfo","config","headers","Authorization","token","response","message","clearCart","removeItem"],"sources":["C:/Users/End User/Documents/CSTU/CSE552 Full Stack Development/E-Commerce Project/estore-app/client/src/actions/cartActions.js"],"sourcesContent":["// client/src/actions/cartActions.js\r\nimport axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_UPDATE_ITEM,\r\n  CART_FETCH_REQUEST,\r\n  CART_FETCH_SUCCESS,\r\n  CART_FETCH_FAIL,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\n// Add to cart\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/products/${id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.imageUrl,\r\n        price: data.price,\r\n        stock: data.stock,\r\n        quantity,\r\n      },\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"cartItems\",\r\n      JSON.stringify(getState().cart.cartItems)\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error adding to cart:\", error);\r\n  }\r\n};\r\n\r\n// Remove from cart\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n// Update cart item quantity\r\nexport const updateCartItem = (id, quantity) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_UPDATE_ITEM,\r\n    payload: { id, quantity },\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n// Fetch user cart from server\r\nexport const fetchCart = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CART_FETCH_REQUEST });\r\n\r\n    const {\r\n      auth: { userInfo },\r\n    } = getState();\r\n\r\n    if (!userInfo) {\r\n      dispatch({\r\n        type: CART_FETCH_FAIL,\r\n        payload: \"User not authenticated\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/cart`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: CART_FETCH_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clear cart\r\nexport const clearCart = () => (dispatch) => {\r\n  dispatch({ type: CART_CLEAR_ITEMS });\r\n  localStorage.removeItem(\"cartItems\");\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,gBAAgB,QACX,4BAA4B;;AAEnC;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,EAAE,EAAEC,QAAQ,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACvE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,aAAaR,EAAE,EACjD,CAAC;IAEDE,QAAQ,CAAC;MACPO,IAAI,EAAEjB,aAAa;MACnBkB,OAAO,EAAE;QACPC,OAAO,EAAEP,IAAI,CAACQ,GAAG;QACjBC,IAAI,EAAET,IAAI,CAACS,IAAI;QACfC,KAAK,EAAEV,IAAI,CAACW,QAAQ;QACpBC,KAAK,EAAEZ,IAAI,CAACY,KAAK;QACjBC,KAAK,EAAEb,IAAI,CAACa,KAAK;QACjBhB;MACF;IACF,CAAC,CAAC;IAEFiB,YAAY,CAACC,OAAO,CAClB,WAAW,EACXC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAACmB,IAAI,CAACC,SAAS,CAC1C,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAI1B,EAAE,IAAK,CAACE,QAAQ,EAAEC,QAAQ,KAAK;EAC5DD,QAAQ,CAAC;IACPO,IAAI,EAAEhB,gBAAgB;IACtBiB,OAAO,EAAEV;EACX,CAAC,CAAC;EAEFkB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAACmB,IAAI,CAACC,SAAS,CAAC,CAAC;AAC9E,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAGA,CAAC3B,EAAE,EAAEC,QAAQ,KAAK,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACtED,QAAQ,CAAC;IACPO,IAAI,EAAEf,gBAAgB;IACtBgB,OAAO,EAAE;MAAEV,EAAE;MAAEC;IAAS;EAC1B,CAAC,CAAC;EAEFiB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAAC,CAAC,CAACmB,IAAI,CAACC,SAAS,CAAC,CAAC;AAC9E,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAGA,CAAA,KAAM,OAAO1B,QAAQ,EAAEC,QAAQ,KAAK;EAC3D,IAAI;IACFD,QAAQ,CAAC;MAAEO,IAAI,EAAEd;IAAmB,CAAC,CAAC;IAEtC,MAAM;MACJkC,IAAI,EAAE;QAAEC;MAAS;IACnB,CAAC,GAAG3B,QAAQ,CAAC,CAAC;IAEd,IAAI,CAAC2B,QAAQ,EAAE;MACb5B,QAAQ,CAAC;QACPO,IAAI,EAAEZ,eAAe;QACrBa,OAAO,EAAE;MACX,CAAC,CAAC;MACF;IACF;IAEA,MAAMqB,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUH,QAAQ,CAACI,KAAK;MACzC;IACF,CAAC;IAED,MAAM;MAAE9B;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,OAAO,EACvCuB,MACF,CAAC;IAED7B,QAAQ,CAAC;MACPO,IAAI,EAAEb,kBAAkB;MACxBc,OAAO,EAAEN;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOoB,KAAK,EAAE;IACdtB,QAAQ,CAAC;MACPO,IAAI,EAAEZ,eAAe;MACrBa,OAAO,EACLc,KAAK,CAACW,QAAQ,IAAIX,KAAK,CAACW,QAAQ,CAAC/B,IAAI,CAACgC,OAAO,GACzCZ,KAAK,CAACW,QAAQ,CAAC/B,IAAI,CAACgC,OAAO,GAC3BZ,KAAK,CAACY;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAOnC,QAAQ,IAAK;EAC3CA,QAAQ,CAAC;IAAEO,IAAI,EAAEX;EAAiB,CAAC,CAAC;EACpCoB,YAAY,CAACoB,UAAU,CAAC,WAAW,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}