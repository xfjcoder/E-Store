{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Table, Button, Row, Col } from \"react-bootstrap\";\n// import { FaEdit, FaTrash, FaPlus } from \"react-icons/fa\";\n// import Message from \"../../components/Message\";\n// import Loader from \"../../components/Loader\";\n// import Paginate from \"../../components/Paginate\";\n// import { listProducts, deleteProduct } from \"../../actions/productActions\";\n// import { confirmAlert } from \"react-confirm-alert\";\n// import \"react-confirm-alert/src/react-confirm-alert.css\";\n\n// const ProdsuctList = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [itemsPerPage] = useState(10);\n\n//   // Get products from Redux store safely\n//   const productList = useSelector((state) => state.productList);\n//   const products = productList ? productList.products : [];\n//   const loading = productList ? productList.loading : false;\n//   const error = productList ? productList.error : null;\n//   const pages = productList && productList.pages ? productList.pages : 0;\n\n//   // Get delete product status from Redux store safely\n//   const productDelete = useSelector((state) => state.productDelete);\n//   const {\n//     loading: loadingDelete,\n//     error: errorDelete,\n//     success: successDelete,\n//   } = productDelete || {};\n\n//   // Get user info from Redux store safely\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const userInfo = userLogin ? userLogin.userInfo : null;\n\n//   useEffect(() => {\n//     // Redirect if not logged in or not an admin\n//     if (!userInfo || userInfo.role !== \"owner\") {\n//       navigate(\"/login\");\n//       return;\n//     }\n\n//     dispatch(listProducts(\"\", currentPage, itemsPerPage));\n//   }, [dispatch, navigate, userInfo, successDelete, currentPage, itemsPerPage]);\n\n//   const deleteHandler = (id) => {\n//     confirmAlert({\n//       title: \"Confirm Deletion\",\n//       message: \"Are you sure you want to delete this product?\",\n//       buttons: [\n//         {\n//           label: \"Yes\",\n//           onClick: () => dispatch(deleteProduct(id)),\n//         },\n//         {\n//           label: \"No\",\n//         },\n//       ],\n//     });\n//   };\n\n//   const createProductHandler = () => {\n//     navigate(\"/admin/product/create\");\n//   };\n\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   return (\n//     <>\n//       <Row className=\"align-items-center\">\n//         <Col>\n//           <h1>Products</h1>\n//         </Col>\n//         <Col className=\"text-end\">\n//           <Button className=\"my-3\" onClick={createProductHandler}>\n//             <FaPlus /> Create Product\n//           </Button>\n//         </Col>\n//       </Row>\n\n//       {loadingDelete && <Loader />}\n//       {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n//       {loading ? (\n//         <Loader />\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <>\n//           <Table striped bordered hover responsive className=\"table-sm\">\n//             <thead>\n//               <tr>\n//                 <th>ID</th>\n//                 <th>NAME</th>\n//                 <th>PRICE</th>\n//                 <th>CATEGORY</th>\n//                 <th>BRAND</th>\n//                 <th>STOCK</th>\n//                 <th>ACTIONS</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {products.map((product) => (\n//                 <tr key={product._id}>\n//                   <td>{product._id}</td>\n//                   <td>{product.name}</td>\n//                   <td>${product.price}</td>\n//                   <td>{product.category}</td>\n//                   <td>{product.brand}</td>\n//                   <td>{product.countInStock}</td>\n//                   <td>\n//                     <Link to={`/admin/product/${product._id}/edit`}>\n//                       <Button variant=\"light\" className=\"btn-sm\">\n//                         <FaEdit />\n//                       </Button>\n//                     </Link>\n//                     <Button\n//                       variant=\"danger\"\n//                       className=\"btn-sm\"\n//                       onClick={() => deleteHandler(product._id)}\n//                     >\n//                       <FaTrash />\n//                     </Button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </Table>\n//           <Paginate\n//             pages={pages}\n//             page={currentPage}\n//             isAdmin={true}\n//             onPageChange={handlePageChange}\n//           />\n//         </>\n//       )}\n//     </>\n//   );\n// };\n\n// export default ProdsuctList;","map":{"version":3,"names":[],"sources":["C:/Users/End User/Documents/CSTU/CSE552 Full Stack Development/E-Commerce Project/estore-app/client/src/pages/admin/ProductsList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { Table, Button, Row, Col } from \"react-bootstrap\";\r\n// import { FaEdit, FaTrash, FaPlus } from \"react-icons/fa\";\r\n// import Message from \"../../components/Message\";\r\n// import Loader from \"../../components/Loader\";\r\n// import Paginate from \"../../components/Paginate\";\r\n// import { listProducts, deleteProduct } from \"../../actions/productActions\";\r\n// import { confirmAlert } from \"react-confirm-alert\";\r\n// import \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\n// const ProdsuctList = () => {\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [itemsPerPage] = useState(10);\r\n\r\n//   // Get products from Redux store safely\r\n//   const productList = useSelector((state) => state.productList);\r\n//   const products = productList ? productList.products : [];\r\n//   const loading = productList ? productList.loading : false;\r\n//   const error = productList ? productList.error : null;\r\n//   const pages = productList && productList.pages ? productList.pages : 0;\r\n\r\n//   // Get delete product status from Redux store safely\r\n//   const productDelete = useSelector((state) => state.productDelete);\r\n//   const {\r\n//     loading: loadingDelete,\r\n//     error: errorDelete,\r\n//     success: successDelete,\r\n//   } = productDelete || {};\r\n\r\n//   // Get user info from Redux store safely\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const userInfo = userLogin ? userLogin.userInfo : null;\r\n\r\n//   useEffect(() => {\r\n//     // Redirect if not logged in or not an admin\r\n//     if (!userInfo || userInfo.role !== \"owner\") {\r\n//       navigate(\"/login\");\r\n//       return;\r\n//     }\r\n\r\n//     dispatch(listProducts(\"\", currentPage, itemsPerPage));\r\n//   }, [dispatch, navigate, userInfo, successDelete, currentPage, itemsPerPage]);\r\n\r\n//   const deleteHandler = (id) => {\r\n//     confirmAlert({\r\n//       title: \"Confirm Deletion\",\r\n//       message: \"Are you sure you want to delete this product?\",\r\n//       buttons: [\r\n//         {\r\n//           label: \"Yes\",\r\n//           onClick: () => dispatch(deleteProduct(id)),\r\n//         },\r\n//         {\r\n//           label: \"No\",\r\n//         },\r\n//       ],\r\n//     });\r\n//   };\r\n\r\n//   const createProductHandler = () => {\r\n//     navigate(\"/admin/product/create\");\r\n//   };\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Row className=\"align-items-center\">\r\n//         <Col>\r\n//           <h1>Products</h1>\r\n//         </Col>\r\n//         <Col className=\"text-end\">\r\n//           <Button className=\"my-3\" onClick={createProductHandler}>\r\n//             <FaPlus /> Create Product\r\n//           </Button>\r\n//         </Col>\r\n//       </Row>\r\n\r\n//       {loadingDelete && <Loader />}\r\n//       {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n//       {loading ? (\r\n//         <Loader />\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <>\r\n//           <Table striped bordered hover responsive className=\"table-sm\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>ID</th>\r\n//                 <th>NAME</th>\r\n//                 <th>PRICE</th>\r\n//                 <th>CATEGORY</th>\r\n//                 <th>BRAND</th>\r\n//                 <th>STOCK</th>\r\n//                 <th>ACTIONS</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {products.map((product) => (\r\n//                 <tr key={product._id}>\r\n//                   <td>{product._id}</td>\r\n//                   <td>{product.name}</td>\r\n//                   <td>${product.price}</td>\r\n//                   <td>{product.category}</td>\r\n//                   <td>{product.brand}</td>\r\n//                   <td>{product.countInStock}</td>\r\n//                   <td>\r\n//                     <Link to={`/admin/product/${product._id}/edit`}>\r\n//                       <Button variant=\"light\" className=\"btn-sm\">\r\n//                         <FaEdit />\r\n//                       </Button>\r\n//                     </Link>\r\n//                     <Button\r\n//                       variant=\"danger\"\r\n//                       className=\"btn-sm\"\r\n//                       onClick={() => deleteHandler(product._id)}\r\n//                     >\r\n//                       <FaTrash />\r\n//                     </Button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </Table>\r\n//           <Paginate\r\n//             pages={pages}\r\n//             page={currentPage}\r\n//             isAdmin={true}\r\n//             onPageChange={handlePageChange}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProdsuctList;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}