{"ast":null,"code":"// client/src/store.js\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/orderReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderUpdateStatusReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  order: orderReducer,\n  orderDetails: orderDetailsReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderUpdateStatus: orderUpdateStatusReducer\n});\n\n// Get cart items from localStorage\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\n\n// Get user info from localStorage\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\n\n// Get shipping address from localStorage\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;\n\n// import { createStore, combineReducers, applyMiddleware } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import { authReducer } from \"./reducers/authReducers\";\n// import {\n//   productReducer,\n//   productDetailsReducer,\n// } from \"./reducers/productReducers\";\n// import { cartReducer } from \"./reducers/cartReducers\";\n// import { orderReducer, orderDetailsReducer } from \"./reducers/orderReducers\";\n\n// const reducer = combineReducers({\n//   auth: authReducer,\n//   productList: productReducer,\n//   productDetails: productDetailsReducer,\n//   cart: cartReducer,\n//   order: orderReducer,\n//   orderDetails: orderDetailsReducer,\n// });\n\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//   : [];\n\n// const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\n//   : null;\n\n// const initialState = {\n//   cart: {\n//     cartItems: cartItemsFromStorage,\n//   },\n//   auth: {\n//     userInfo: userInfoFromStorage,\n//   },\n// };\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//   reducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// );\n\n// export default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderUpdateStatusReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userUpdateProfile","order","orderDetails","orderListMy","orderList","orderUpdateStatus","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/End User/Documents/CSTU/CSE552 Full Stack Development/E-Commerce Project/estore-app/client/src/store.js"],"sourcesContent":["// client/src/store.js\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport { cartReducer } from \"./reducers/orderReducers\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nimport {\r\n  orderReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderUpdateStatusReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  order: orderReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderUpdateStatus: orderUpdateStatusReducer,\r\n});\r\n\r\n// Get cart items from localStorage\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n// Get user info from localStorage\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n// Get shipping address from localStorage\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n\r\n// import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { authReducer } from \"./reducers/authReducers\";\r\n// import {\r\n//   productReducer,\r\n//   productDetailsReducer,\r\n// } from \"./reducers/productReducers\";\r\n// import { cartReducer } from \"./reducers/cartReducers\";\r\n// import { orderReducer, orderDetailsReducer } from \"./reducers/orderReducers\";\r\n\r\n// const reducer = combineReducers({\r\n//   auth: authReducer,\r\n//   productList: productReducer,\r\n//   productDetails: productDetailsReducer,\r\n//   cart: cartReducer,\r\n//   order: orderReducer,\r\n//   orderDetails: orderDetailsReducer,\r\n// });\r\n\r\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n//   : [];\r\n\r\n// const userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n//   : null;\r\n\r\n// const initialState = {\r\n//   cart: {\r\n//     cartItems: cartItemsFromStorage,\r\n//   },\r\n//   auth: {\r\n//     userInfo: userInfoFromStorage,\r\n//   },\r\n// };\r\n\r\n// const middleware = [thunk];\r\n\r\n// const store = createStore(\r\n//   reducer,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleware))\r\n// );\r\n\r\n// export default store;\r\n"],"mappings":"AAAA;;AAEA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SACEC,kBAAkB,EAClBC,qBAAqB,EACrBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAoB,QACf,4BAA4B;AAEnC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,QACnB,yBAAyB;AAEhC,SACEC,YAAY,EACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,gBAAgB,EAChBC,wBAAwB,QACnB,0BAA0B;AAEjC,MAAMC,OAAO,GAAGnB,eAAe,CAAC;EAC9BoB,WAAW,EAAEhB,kBAAkB;EAC/BiB,cAAc,EAAEhB,qBAAqB;EACrCiB,aAAa,EAAEhB,oBAAoB;EACnCiB,aAAa,EAAEhB,oBAAoB;EACnCiB,aAAa,EAAEhB,oBAAoB;EACnCiB,IAAI,EAAEhB,WAAW;EACjBiB,SAAS,EAAEhB,gBAAgB;EAC3BiB,YAAY,EAAEhB,mBAAmB;EACjCiB,WAAW,EAAEhB,kBAAkB;EAC/BiB,iBAAiB,EAAEhB,wBAAwB;EAC3CiB,KAAK,EAAEhB,YAAY;EACnBiB,YAAY,EAAEhB,mBAAmB;EACjCiB,WAAW,EAAEhB,kBAAkB;EAC/BiB,SAAS,EAAEhB,gBAAgB;EAC3BiB,iBAAiB,EAAEhB;AACrB,CAAC,CAAC;;AAEF;AACA,MAAMiB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;;AAEN;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAEN,MAAMK,YAAY,GAAG;EACnBjB,IAAI,EAAE;IACJkB,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACnB,CAAC;EACDf,SAAS,EAAE;IAAEmB,QAAQ,EAAEL;EAAoB;AAC7C,CAAC;AAED,MAAMM,UAAU,GAAG,CAAC5C,KAAK,CAAC;AAE1B,MAAM6C,KAAK,GAAGhD,WAAW,CACvBoB,OAAO,EACPuB,YAAY,EACZvC,mBAAmB,CAACF,eAAe,CAAC,GAAG6C,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}