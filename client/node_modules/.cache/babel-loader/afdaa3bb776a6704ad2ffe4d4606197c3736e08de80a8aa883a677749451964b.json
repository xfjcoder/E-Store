{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\End User\\\\Documents\\\\CSTU\\\\CSE552 Full Stack Development\\\\E-Commerce Project\\\\estore-app\\\\client\\\\src\\\\components\\\\routes\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// client/src/components/routes/PrivateRoute.js\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    userInfo\n  } = useSelector(state => state.auth);\n  return userInfo ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 32\n  }, this);\n};\n\n// const PrivateRoute = ({ ownerOnly = false }) => {\n//   // Safely access userInfo using the pattern we've been applying\n//   const userLogin = useSelector((state) => state.userLogin);\n//   const userInfo = userLogin ? userLogin.userInfo : null;\n\n//   // If not logged in, redirect to login\n//   if (!userInfo) {\n//     return <Navigate to=\"/login\" replace />;\n//   }\n\n//   // If ownerOnly route and user is not an owner, redirect to home\n//   if (ownerOnly && userInfo.role !== \"owner\") {\n//     return <Navigate to=\"/\" replace />;\n//   }\n\n//   // Otherwise, render the protected component\n//   return <Outlet />;\n// };\n_s(PrivateRoute, \"tm9u9ATcYNEYVCp8P5F3TqiqzZ4=\", false, function () {\n  return [useSelector];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","Outlet","jsxDEV","_jsxDEV","PrivateRoute","children","_s","userInfo","state","auth","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/End User/Documents/CSTU/CSE552 Full Stack Development/E-Commerce Project/estore-app/client/src/components/routes/PrivateRoute.js"],"sourcesContent":["// client/src/components/routes/PrivateRoute.js\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { userInfo } = useSelector((state) => state.auth);\r\n\r\n  return userInfo ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\n// const PrivateRoute = ({ ownerOnly = false }) => {\r\n//   // Safely access userInfo using the pattern we've been applying\r\n//   const userLogin = useSelector((state) => state.userLogin);\r\n//   const userInfo = userLogin ? userLogin.userInfo : null;\r\n\r\n//   // If not logged in, redirect to login\r\n//   if (!userInfo) {\r\n//     return <Navigate to=\"/login\" replace />;\r\n//   }\r\n\r\n//   // If ownerOnly route and user is not an owner, redirect to home\r\n//   if (ownerOnly && userInfo.role !== \"owner\") {\r\n//     return <Navigate to=\"/\" replace />;\r\n//   }\r\n\r\n//   // Otherwise, render the protected component\r\n//   return <Outlet />;\r\n// };\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAS,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEvD,OAAOF,QAAQ,GAAGF,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACU,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvD,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAAR,EAAA,CAvBMF,YAAY;EAAA,QACKL,WAAW;AAAA;AAAAgB,EAAA,GAD5BX,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}